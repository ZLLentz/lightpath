import argparse
import logging

import happi
import pydm
from lightpath import LightController
from lightpath.ui import LightApp

DEVICE_CONFIG = '/reg/g/pcds/pyps/apps/hutch-python/device_config/db.json'


def main(db, hutches):
    """
    Open the lightpath user interface for a configuration file

    Parameters
    ----------
    db: str
        Path to happi JSON database
    """
    # Create PyDM Application
    app = pydm.PyDMApplication()
    # Create Lightpath UI from provided database
    lc = LightController(happi.Client(path=db),
                         endstations=hutches)
    lp = LightApp(lc)
    # Execute
    lp.show()
    app.exec_()


if __name__ == '__main__':
    # Configure logging
    logging.basicConfig(level=logging.INFO,
                        format='%(levelname)s: %(message)s')
    # Create ArgumentParser
    parser = argparse.ArgumentParser(description='Launch the Lightpath UI')
    parser.add_argument('--db', dest='db', type=str,
                        help='Path to device configuration. {} by default'
                             ''.format(DEVICE_CONFIG))
    parser.add_argument('--hutches', dest='hutches', nargs='+',
                        help='Experimental Endstation to show the Lightpath')
    # Parse and launch
    args = parser.parse_args()
    # Clean user input for hutches
    if args.hutches:
        hutches = [hutch.upper() for hutch in args.hutches]
    else:
        hutches = None
    main(args.db or DEVICE_CONFIG, hutches)
