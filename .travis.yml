language: python
sudo: false
env:
  global:
    - OFFICIAL_REPO="pcdshub/lightpath"
    - secure: "TsbDiFJe8vTjJCZJowjVkWFpBd2w+gCr+56F4TUlhLFN9aZvaUwyEEiWx3KWzFqYndUTLZsbZNSmekE63w4ZUGKhNa/DALxKo2Pt5esKfIWKoiiTM8YI39x3luiS8eiJ3t/XrC5R28MnH5dd8rCl+RaUkT/nJQcjz3YLl4bjbSnbr18HhsodmydW1zvFX8Jyxv42j8wyc2P0dZkX+SuaEZ0lsVH4QCK0seIf8f4uE6t/C1VuFWBPS+q5t3y2FwGQpH3CpAI5MEyHsnyCyQaP4khVQJRnjnSQ7M4oqy0t3WQYwPXSvwxZdswGmFLFru31GDpYVYcOFYtwOvF5NBr9Pg2yViLZOEY9niUgz0MEe6W+H2SDyGyZcRcSLciiK43jU0tqNEXOo/AN9FSup9FabmaBihxMbKYuKASsRW5/MelRJ+u6q2hun2+XUXd6VxRdTuIsqStR7q237ZTyTyiixH3zaeIpNRffPAg2u1SyLmLMVUkF+dsPtaQgWudBIjvSdSJFD3ZAWMnhC1xz9S4lLZqvHwWWp8BpCDkm8SsQkADvA6Y9j62shOtozv89qnSwaJB2MKNASireoOROCMxRSLB1N9BTDjTcQE0qC8U7JI/gRep+hVLannF8LpLksyrUn25jFE2diNvzvxbjYN6RLSuUiDhHieDFT7iKM1DUyL0=" 

matrix:
  include:
      - python: 3.6
        env:
           - BUILD_DOCS=1
           - PCDS_CHANNEL=pcds-tag
      - python: 3.6
        env:
           - PCDS_CHANNEL=pcds-dev
      - python: 3.7
        dist: xenial
        sudo: true
        env:
           - PCDS_CHANNEL=pcds-tag
      - python: 3.7
        dist: xenial
        sudo: true
        env:
           - PCDS_CHANNEL=pcds-dev
  allow_failures:
      - python: 3.7
        dist: xenial
        sudo: true
        env:
           - PCDS_CHANNEL=pcds-tag
      - python: 3.7
        dist: xenial
        sudo: true
        env:
           - PCDS_CHANNEL=pcds-dev

install:
  - sudo apt-get update
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda install conda-build anaconda-client
  - conda update -q conda conda-build
  - conda config --add channels $PCDS_CHANNEL 
  - conda config --append channels pcds-tag
  - conda config --append channels conda-forge
  # Useful for debugging any issues with conda
  - conda info -a
  - conda build -q conda-recipe --python=$TRAVIS_PYTHON_VERSION --output-folder bld-dir
  - conda config --add channels "file://`pwd`/bld-dir"
  # Create test environment
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION lightpath --file dev-requirements.txt
  - source activate test-environment

before_script:
    #Take from docs.travis-ci.com/user/gui-and-headless-browsers
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3 # give xvfb some time to start

script:
  - coverage run run_tests.py
  - coverage report -m
  - flake8 lightpath
  - set -e
  # Build docs.
  - |
    if [[ -n "$DOCTR_DEPLOY_ENCRYPTION_KEY_PCDSHUB_LIGHTPATH" && $BUILD_DOCS ]]; then
      pushd docs
      make html
      popd
      # Publish docs.
      doctr deploy . --built-docs docs/build/html --deploy-branch-name gh-pages
    fi

after_success:
  - codecov
  - |
    if [[ $TRAVIS_PULL_REQUEST == false && $TRAVIS_REPO_SLUG == $OFFICIAL_REPO && $TRAVIS_BRANCH == $TRAVIS_TAG  && $TRAVIS_TAG != '' && $CONDA_UPLOAD_TOKEN_TAG != '' ]]; then
      export ANACONDA_API_TOKEN=$CONDA_UPLOAD_TOKEN_TAG
      anaconda upload bld-dir/linux-64/*.tar.bz2
    fi
  - |
    if [[ $TRAVIS_PULL_REQUEST == false && $TRAVIS_REPO_SLUG == $OFFICIAL_REPO && $TRAVIS_BRANCH == 'master' && $TRAVIS_TAG == '' && $CONDA_UPLOAD_TOKEN_DEV != '' ]]; then
      export ANACONDA_API_TOKEN=$CONDA_UPLOAD_TOKEN_DEV
      anaconda upload bld-dir/linux-64/*.tar.bz2
    fi
